# -*- coding: utf-8 -*-
"""AI–DS Nexus | A0.2. Python Packages| RezaShokr.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mQBgouLMBqUPqnRipMYe1V5LPy53TZhM

# 📚 Assignment 2 — NumPy, pandas & Matplotlib Essentials
Welcome to your first data-science sprint! In this three-part mini-project you’ll touch the libraries every ML practitioner leans on daily:

1. NumPy — fast n-dimensional arrays

2. pandas — tabular data wrangling

3. Matplotlib — quick, customizable plots

Each part starts with “Quick-start notes”, then gives you two bite-sized tasks. Replace every # TODO with working Python in a notebook or script, run it, and check your results. Happy hacking! 😊

## 1 · NumPy 🧮
Quick-start notes
Core object: ndarray (n-dimensional array)

Create data: np.array, np.arange, np.random.*

Summaries: mean, std, sum, max, …

Vectorised math beats Python loops for speed

### Task 1 — Mock temperatures
"""

# 👉 # TODO: import numpy and create an array of 365
# normally-distributed °C values (µ=20, σ=5) called temps
import numpy as np
print(np.random.normal(20, 5, 365))

"""### Task 2 — Average temperature

"""

# 👉 # TODO: print the mean of temps
import numpy as np
temps = np.random.normal(20, 5, 365)
mean_temp = np.mean(temps)
print(mean_temp)

"""## 2 · pandas 📊
Quick-start notes
Main structures: DataFrame, Series

Read data: pd.read_csv, pd.read_excel, …

Selection: .loc[label], .iloc[pos]

Group & summarise: .groupby(...).agg(...)

### Task 3 — Load ride log
"""

# 👉 # TODO: read "rides.csv" into df
# (columns: date,temp,rides,weekday)
import pandas as pd
df = pd.read_cv("rides,csv", usecols = ["date","temp", "rides", "weekday"])
print(df.head())

"""### Task 4 — Weekday averages"""

# 👉 # TODO: compute and print mean rides per weekday
import pandas as pd
df = pd.read_csv("rides_csv", usecols = ["rides", "weekday"])
mean_rides_per_weekday = df.groupby("weekday")("rides").mean()
print(mean_rides_per_weekday)

"""## 3 · Matplotlib 📈
Quick-start notes
Workhorse: pyplot interface (import matplotlib.pyplot as plt)

Figure & axes: fig, ax = plt.subplots()

Common plots: plot, scatter, hist, imshow

Display inline in Jupyter with %matplotlib inline or %matplotlib notebook

### Task 5 — Scatter plot
"""

# 👉 # TODO: scatter-plot temperature (x) vs rides (y) from df
import matplotlib.pyplot as plt
plt.scatter(df['temp'], df['rides'])
plt.xlable('temperature(celsius)')
plt.ylable('number of rides')
plt.title('temperature vs number of rides')

"""### Task 6 — Show the figure


"""

# 👉 # TODO: call plt.show() so the plot appears
import matplotlib.pyplot as plt
plt.scatter(df['temp']), df['rides']
plt.xlablea('temperature(celsius)')
plt.ylable('number of rides')
plt.title('temperature vs rides')
plt.show()